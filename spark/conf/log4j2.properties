status = error
name = SparkLog4j2

# ----------------------------------------
# Appender for Console (stdout)
# ----------------------------------------
appender.console_out.type = Console
appender.console_out.name = CONSOLE_OUT
appender.console_out.target = SYSTEM_OUT
appender.console_out.layout.type = PatternLayout
appender.console_out.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} [%t] %-5p %c{1}:%L - %m%n

# ----------------------------------------
# Appender for Console (stderr)
# ----------------------------------------
appender.console_err.type = Console
appender.console_err.name = CONSOLE_ERR
appender.console_err.target = SYSTEM_ERR
appender.console_err.layout.type = PatternLayout
appender.console_err.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} [%t] %-5p %c{1}:%L - %m%n
appender.console_err.filter.threshold.type = ThresholdFilter
appender.console_err.filter.threshold.level = error

# ----------------------------------------
# Rolling File Appender
# ----------------------------------------
appender.rolling.type = RollingFile
appender.rolling.name = ROLLING
appender.rolling.fileName = ${env:SPARK_DRIVER_LOGS_DIR}/driver.log4j.log
appender.rolling.filePattern = ${env:SPARK_DRIVER_LOGS_DIR}/driver-%d{yyyy-MM-dd-HH}-%i.log4j.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} [%t] %-5p %c{1}:%L - %m%n

# Rolling policies
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 100 MB

# Keep only the last 5 rolled files
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 5

# ----------------------------------------
# Root Logger Configuration
# ----------------------------------------
rootLogger.level = INFO
rootLogger.appenderRefs = console_out, console_err, rolling
rootLogger.appenderRef.console_out.ref = CONSOLE_OUT
rootLogger.appenderRef.console_err.ref = CONSOLE_ERR
rootLogger.appenderRef.rolling.ref = ROLLING

# ----------------------------------------
# Specific Spark Class Logging Levels
# ----------------------------------------
logger.jetty.name = org.spark_project.jetty
logger.jetty.level = WARN

logger.hadoop.name = org.apache.hadoop
logger.hadoop.level = WARN

logger.spark.name = org.apache.spark
logger.spark.level = INFO

logger.parquet.name = org.apache.parquet
logger.parquet.level = WARN
